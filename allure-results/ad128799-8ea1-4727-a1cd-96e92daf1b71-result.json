{"name": "test_icloud_upload", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5559c8813d93 <unknown>\n#1 0x5559c85e22d7 <unknown>\n#2 0x5559c861ecaa <unknown>\n#3 0x5559c861edb1 <unknown>\n#4 0x5559c865c8f4 <unknown>\n#5 0x5559c864261d <unknown>\n#6 0x5559c865a619 <unknown>\n#7 0x5559c8642353 <unknown>\n#8 0x5559c8611e40 <unknown>\n#9 0x5559c8613038 <unknown>\n#10 0x5559c88678be <unknown>\n#11 0x5559c886b8f0 <unknown>\n#12 0x5559c884bf90 <unknown>\n#13 0x5559c886cb7d <unknown>\n#14 0x5559c883d578 <unknown>\n#15 0x5559c8891348 <unknown>\n#16 0x5559c88914d6 <unknown>\n#17 0x5559c88ab341 <unknown>\n#18 0x7f2374694b43 <unknown>", "trace": "self = <main.TelemetryTest testMethod=test_icloud_upload>\n\n    def test_icloud_upload(self):\n        # Test downloading a file from Nexus Mods\n>       self.icloud_page.run_icloud_upload()\n\nmain.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/icloud_page.py:94: in run_icloud_upload\n    self.delete_file()\npages/icloud_page.py:58: in delete_file\n    iframe = WebDriverWait(self.driver, 20).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f856efe42411806d5976e42230223a7b\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f5cfaa35870>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5559c8813d93 <unknown>\nE       #1 0x5559c85e22d7 <unknown>\nE       #2 0x5559c861ecaa <unknown>\nE       #3 0x5559c861edb1 <unknown>\nE       #4 0x5559c865c8f4 <unknown>\nE       #5 0x5559c864261d <unknown>\nE       #6 0x5559c865a619 <unknown>\nE       #7 0x5559c8642353 <unknown>\nE       #8 0x5559c8611e40 <unknown>\nE       #9 0x5559c8613038 <unknown>\nE       #10 0x5559c88678be <unknown>\nE       #11 0x5559c886b8f0 <unknown>\nE       #12 0x5559c884bf90 <unknown>\nE       #13 0x5559c886cb7d <unknown>\nE       #14 0x5559c883d578 <unknown>\nE       #15 0x5559c8891348 <unknown>\nE       #16 0x5559c88914d6 <unknown>\nE       #17 0x5559c88ab341 <unknown>\nE       #18 0x7f2374694b43 <unknown>\n\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "2a612fdc-4e3a-407d-bc46-9879f6cf9d41-attachment.txt", "type": "text/plain"}], "start": 1677507981400, "stop": 1677508020545, "uuid": "f3ce784b-ad2f-4d7e-923f-31b9c7dc364d", "historyId": "8907b85976e004a8aacc8cb917312dce", "testCaseId": "9153f1494256f6e5bf2b48e5452ba0e9", "fullName": "main.TelemetryTest#test_icloud_upload", "labels": [{"name": "suite", "value": "main"}, {"name": "subSuite", "value": "TelemetryTest"}, {"name": "host", "value": "sace-HP-Laptop-14-bs1xx"}, {"name": "thread", "value": "175813-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "main"}]}