{"name": "test_icloud_download", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c7d3258d93 <unknown>\n#1 0x55c7d30272d7 <unknown>\n#2 0x55c7d3063caa <unknown>\n#3 0x55c7d3063db1 <unknown>\n#4 0x55c7d30a18f4 <unknown>\n#5 0x55c7d308761d <unknown>\n#6 0x55c7d309f619 <unknown>\n#7 0x55c7d3087353 <unknown>\n#8 0x55c7d3056e40 <unknown>\n#9 0x55c7d3058038 <unknown>\n#10 0x55c7d32ac8be <unknown>\n#11 0x55c7d32b08f0 <unknown>\n#12 0x55c7d3290f90 <unknown>\n#13 0x55c7d32b1b7d <unknown>\n#14 0x55c7d3282578 <unknown>\n#15 0x55c7d32d6348 <unknown>\n#16 0x55c7d32d64d6 <unknown>\n#17 0x55c7d32f0341 <unknown>\n#18 0x7f6618494b43 <unknown>", "trace": "self = <main.TelemetryTest testMethod=test_icloud_download>\n\n    def test_icloud_download(self):\n        # Test downloading a file from iCloud\n>       self.icloud_page.run_icloud_download()\n\nmain.py:135: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/icloud_page.py:142: in run_icloud_download\n    iframe = WebDriverWait(self.driver, 20).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5d5ad916a13fdb73ebdbc99e14f170f0\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f5cfbe39cf0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55c7d3258d93 <unknown>\nE       #1 0x55c7d30272d7 <unknown>\nE       #2 0x55c7d3063caa <unknown>\nE       #3 0x55c7d3063db1 <unknown>\nE       #4 0x55c7d30a18f4 <unknown>\nE       #5 0x55c7d308761d <unknown>\nE       #6 0x55c7d309f619 <unknown>\nE       #7 0x55c7d3087353 <unknown>\nE       #8 0x55c7d3056e40 <unknown>\nE       #9 0x55c7d3058038 <unknown>\nE       #10 0x55c7d32ac8be <unknown>\nE       #11 0x55c7d32b08f0 <unknown>\nE       #12 0x55c7d3290f90 <unknown>\nE       #13 0x55c7d32b1b7d <unknown>\nE       #14 0x55c7d3282578 <unknown>\nE       #15 0x55c7d32d6348 <unknown>\nE       #16 0x55c7d32d64d6 <unknown>\nE       #17 0x55c7d32f0341 <unknown>\nE       #18 0x7f6618494b43 <unknown>\n\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "c59099f3-b539-4790-b8a0-232179ce59d4-attachment.txt", "type": "text/plain"}], "start": 1677507955139, "stop": 1677507981253, "uuid": "395f8519-4c16-46ef-8876-4f24ba992dff", "historyId": "7e4d8441bb7e46751e72e8760f6a09cf", "testCaseId": "0ffe29d10d9a411f5ca3e958884e652a", "fullName": "main.TelemetryTest#test_icloud_download", "labels": [{"name": "suite", "value": "main"}, {"name": "subSuite", "value": "TelemetryTest"}, {"name": "host", "value": "sace-HP-Laptop-14-bs1xx"}, {"name": "thread", "value": "175813-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "main"}]}